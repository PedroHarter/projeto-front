import { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import api from '../src/services/api';

// Componente Dashboard - Vers√£o simplificada
export default function Dashboard() {
  // Estados para armazenar as estat√≠sticas
  const [totalUsers, setTotalUsers] = useState(0);
  const [totalServices, setTotalServices] = useState(0);
  const [activeServices, setActiveServices] = useState(0);
  const [loading, setLoading] = useState(true);

  // useEffect √© executado quando o componente √© montado
  useEffect(() => {
    fetchStats();
  }, []);

  // Fun√ß√£o para buscar as estat√≠sticas do sistema
  const fetchStats = async () => {
    try {
      // Faz duas requisi√ß√µes ao mesmo tempo
      const [usersResponse, servicesResponse] = await Promise.all([
        api.get('/users'),      // Busca todos os usu√°rios
        api.get('/services')    // Busca todos os servi√ßos
      ]);

      // Conta quantos servi√ßos est√£o ativos
      const activeServicesCount = servicesResponse.data.filter(
        service => service.status === 'ativo'
      ).length;

      // Atualiza os estados com os dados
      setTotalUsers(usersResponse.data.length);
      setTotalServices(servicesResponse.data.length);
      setActiveServices(activeServicesCount);
      
    } catch (error) {
      console.error('Erro ao carregar estat√≠sticas:', error);
    } finally {
      setLoading(false); // Para de mostrar "carregando"
    }
  };

  // Mostra tela de carregamento
  if (loading) {
    return (
      <div className="container">
        <div className="card">
          <h2>Carregando estat√≠sticas...</h2>
        </div>
      </div>
    );
  }

  return (
    <div className="container">
      <div className="card">
        {/* Cabe√ßalho do Dashboard */}
        <div className="card-header">
          <h1 className="card-title">Dashboard - Vis√£o Geral</h1>
        </div>
        
        {/* Cards com estat√≠sticas */}
        <div className="grid">
          {/* Card de Usu√°rios */}
          <div className="card">
            <h3>üë• Usu√°rios</h3>
            <p style={{ fontSize: '2rem', fontWeight: 'bold', color: '#3498db' }}>
              {totalUsers}
            </p>
            <p>Total de usu√°rios cadastrados</p>
            <Link to="/users" className="btn btn-primary">
              Gerenciar Usu√°rios
            </Link>
          </div>

          {/* Card de Servi√ßos */}
          <div className="card">
            <h3>üõ†Ô∏è Servi√ßos</h3>
            <p style={{ fontSize: '2rem', fontWeight: 'bold', color: '#27ae60' }}>
              {totalServices}
            </p>
            <p>Total de servi√ßos cadastrados</p>
            <Link to="/services" className="btn btn-primary">
              Gerenciar Servi√ßos
            </Link>
          </div>

          {/* Card de Servi√ßos Ativos */}
          <div className="card">
            <h3>Servi√ßos Ativos</h3>
            <p style={{ fontSize: '2rem', fontWeight: 'bold', color: '#f39c12' }}>
              {activeServices}
            </p>
            <p>Servi√ßos dispon√≠veis</p>
            <Link to="/services" className="btn btn-primary">
              Ver Servi√ßos
            </Link>
          </div>
        </div>

        {/* Se√ß√£o de a√ß√µes r√°pidas */}
        <div className="card" style={{ marginTop: '30px' }}>
          <h3>‚ö° A√ß√µes R√°pidas</h3>
          <div style={{ display: 'flex', gap: '15px', flexWrap: 'wrap' }}>
            <Link to="/users/new" className="btn btn-success">
              ‚ûï Novo Usu√°rio
            </Link>
            <Link to="/services/new" className="btn btn-success">
              ‚ûï Novo Servi√ßo
            </Link>
            <Link to="/users" className="btn btn-primary">
              üìã Listar Usu√°rios
            </Link>
            <Link to="/services" className="btn btn-primary">
              üìã Listar Servi√ßos
            </Link>
          </div>
        </div>
      </div>
    </div>
  );
} 